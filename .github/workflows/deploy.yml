name: Build and Deploy

on:
  push:
    branches:
      - dev
      - qa
      - main
  delete:
    branches:
      - dev
      - qa
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: my-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_INTERNAL_NAME: lq-internal-deployment
  DEPLOYMENT_FRONTEND_NAME: lq-frontend-deployment
  IMAGE_INTERNAL: lq-internal
  IMAGE_FRONTEND: lq-frontend

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build and push the backend Docker image
    - name: Build and Publish Backend Image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_INTERNAL }}:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          -f lq-internal/src/main/docker/Dockerfile.jvm \
          lq-internal
        docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_INTERNAL }}:$GITHUB_SHA"

    # Build and push the frontend Docker image
    - name: Build and Publish Frontend Image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_FRONTEND }}:$GITHUB_SHA" \
          -f lq-frontend/Dockerfile \
          lq-frontend
        docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_FRONTEND }}:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the backend Docker image to the GKE cluster
    - name: Deploy Backend
      run: |-
        ./kustomize edit set image gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_INTERNAL }}:$GITHUB_SHA
        ./kustomize build backend | kubectl apply -f -
        kubectl rollout status deployment/${{ env.DEPLOYMENT_INTERNAL_NAME }}
        kubectl get services -o wide

    # Deploy the frontend Docker image to the GKE cluster
    - name: Deploy Frontend
      run: |-
        ./kustomize edit set image gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_FRONTEND }}:$GITHUB_SHA
        ./kustomize build frontend | kubectl apply -f -
        kubectl rollout status deployment/${{ env.DEPLOYMENT_FRONTEND_NAME }}
        kubectl get services -o wide
